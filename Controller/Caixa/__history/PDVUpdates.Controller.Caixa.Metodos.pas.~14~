unit PDVUpdates.Controller.Caixa.Metodos;

interface

uses
  PDVUpdates.Controller.Caixa.Interfaces, PDVUpdates.Model.Caixa.Interfaces;

type

  TControllerCaixaMetodos = class(TInterfacedObject, iControllerCaixaMetodos)
  private
    FParnt: iControllerCaixa;
    FModel: iModelCaixa;
  public
    constructor Create(Value: iControllerCaixa);
    destructor Destroy; override;
    class function New(Value: iControllerCaixa): iControllerCaixaMetodos;
    function Abrir: iControllerCaixaMetodos;
    function Fechar: iControllerCaixaMetodos;
    function Suprimento: iControllerCaixaMetodos;
    function Sangria: iControllerCaixaMetodos;
    function TrocarOperador: iControllerCaixaMetodos;
    function BloquearCaixa: iControllerCaixaMetodos;
    function DesbloquearCaixa: iControllerCaixaMetodos;
    function &End: iControllerCaixa;
  end;

implementation

{ TControllerCaixaMetodos }

uses PDVUpdates.Model.Facade, PDVUpdates.View.Dialog.CapturaValor,
  PDVUpdates.Controller.Facade;

function TControllerCaixaMetodos.Abrir: iControllerCaixaMetodos;
begin
  Result := Self;
  FModel.Metodos.Abrir.SetValorAbertuta(TFrmCapturaValor.Create(nil)
    .ExibirForm('Valor de Abertura', 'OK', 'Cancelar'))
    .SetOperador(nil).EndAbrir;
end;

function TControllerCaixaMetodos.BloquearCaixa: iControllerCaixaMetodos;
begin
  Result := Self;
  FModel.Metodos.BloquearCaixa.SetAutorizadorBloqueio();
end;

function TControllerCaixaMetodos.&End: iControllerCaixa;
begin

end;

constructor TControllerCaixaMetodos.Create(Value: iControllerCaixa);
begin
  FParnt := Value;
  FModel := TModelFacade.New.Caixa.Caixa;
end;

function TControllerCaixaMetodos.DesbloquearCaixa: iControllerCaixaMetodos;
begin
  Result := Self;
end;

destructor TControllerCaixaMetodos.Destroy;
begin

  inherited;
end;

function TControllerCaixaMetodos.Fechar: iControllerCaixaMetodos;
begin
  Result := Self;
  FModel.Metodos.Fechar.SetValorFechamento(TFrmCapturaValor.Create(nil)
    .ExibirForm('Valor do fechamento', 'OK', 'Cancelar'))
    .SetFiscal(TControllerFacade.New.Usuario.Usuario.Fiscal.&End);
end;

class function TControllerCaixaMetodos.New(Value: iControllerCaixa)
  : iControllerCaixaMetodos;
begin
  Result := Self.Create(Value);
end;

function TControllerCaixaMetodos.Sangria: iControllerCaixaMetodos;
begin

end;

function TControllerCaixaMetodos.Suprimento: iControllerCaixaMetodos;
begin

end;

function TControllerCaixaMetodos.TrocarOperador: iControllerCaixaMetodos;
begin

end;

end.
