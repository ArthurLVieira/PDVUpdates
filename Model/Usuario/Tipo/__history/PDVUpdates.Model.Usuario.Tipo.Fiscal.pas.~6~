unit PDVUpdates.Model.Usuario.Tipo.Fiscal;

interface

uses PDVUpdates.Model.Usuario.Interfaces;

type

  TModelUsuarioTipoFiscal = class(TInterfacedObject, iModelUsuario,
    iModelUsuarioMetodos)
  private
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iModelUsuario;
    function Metodos: iModelUsuarioMetodos;
    function AbrirCaixa: iModelUsuarioMetodos;
    function FecharCaixa: iModelUsuarioMetodos;
    function Desconto: iModelUsuarioMetodos;
    function Acrescimo: iModelUsuarioMetodos;
    function DevolucaoCupom: iModelUsuarioMetodos;
    function CancelamentoCupom: iModelUsuarioMetodos;
    function CancelamentoItem: iModelUsuarioMetodos;
    function DevolucaoItem: iModelUsuarioMetodos;

  end;

implementation

{ TModelUsuarioTipoFiscal }

function TModelUsuarioTipoFiscal.AbrirCaixa: iModelUsuarioMetodos;
begin
  Result := Self;
end;

function TModelUsuarioTipoFiscal.Acrescimo: iModelUsuarioMetodos;
begin
  Result := Self;
end;

function TModelUsuarioTipoFiscal.CancelamentoCupom: iModelUsuarioMetodos;
begin
  Result := Self;
end;

function TModelUsuarioTipoFiscal.CancelamentoItem: iModelUsuarioMetodos;
begin
  Result := Self;
end;

constructor TModelUsuarioTipoFiscal.Create;
begin

end;

function TModelUsuarioTipoFiscal.Desconto: iModelUsuarioMetodos;
begin
  Result := Self;
end;

destructor TModelUsuarioTipoFiscal.Destroy;
begin

  inherited;
end;

function TModelUsuarioTipoFiscal.DevolucaoCupom: iModelUsuarioMetodos;
begin
  Result := Self;
end;

function TModelUsuarioTipoFiscal.DevolucaoItem: iModelUsuarioMetodos;
begin
  Result := Self;
end;

function TModelUsuarioTipoFiscal.FecharCaixa: iModelUsuarioMetodos;
begin
  Result := Self;
end;

function TModelUsuarioTipoFiscal.Metodos: iModelUsuarioMetodos;
begin
  Result := Self;
end;

class function TModelUsuarioTipoFiscal.New: iModelUsuario;
begin
  Result := Self.Create;
end;

end.
