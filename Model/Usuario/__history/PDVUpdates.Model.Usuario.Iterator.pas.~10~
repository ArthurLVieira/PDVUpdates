unit PDVUpdates.Model.Usuario.Iterator;

interface

uses PDVUpdates.Model.Usuario.Interfaces, System.Generics.Collections;

type

  TModelUsuarioIterator = class(TInterfacedObject, iModelUsuarioIterator)
  private
    FLista: TList<iModelUsuario>;
    FCount: Integer;
    FParent: iModelUsuario;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iModelUsuarioIterator;
    function hasNext: Boolean;
    function Next: iModelUsuario;
    function Add(Value: iModelUsuario): iModelUsuarioIterator;
    function Lista: TList<iModelUsuario>;
  end;

implementation

uses
  System.SysUtils;

{ TModelUsuarioIterator }

function TModelUsuarioIterator.Add(Value: iModelUsuario): iModelUsuarioIterator;
begin
  Result := Self;
  FLista.Add(Value);
end;

constructor TModelUsuarioIterator.Create;
begin
  FLista := TList<iModelUsuario>.Create;
  FCount := 0;

end;

destructor TModelUsuarioIterator.Destroy;
begin
  FreeAndNil(FLista);
  inherited;
end;

function TModelUsuarioIterator.hasNext: Boolean;
begin
  Result := not(FCount = FLista.Count);
end;

function TModelUsuarioIterator.Lista: TList<iModelUsuario>;
begin
  Result := FLista;
end;

class function TModelUsuarioIterator.New: iModelUsuarioIterator;
begin
  Result := Self.Create;
end;

function TModelUsuarioIterator.Next: iModelUsuario;
begin
  Result := FLista.Items[FCount];
  Inc(FCount);
end;

end.
