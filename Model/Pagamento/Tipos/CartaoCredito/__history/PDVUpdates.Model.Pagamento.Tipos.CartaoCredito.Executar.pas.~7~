unit PDVUpdates.Model.Pagamento.Tipos.CartaoCredito.Executar;

interface

uses
  PDVUpdates.Model.Pagamento.Interfaces;

type

  TModelPagamentoTipoCartaoCreditoExecultar = class(TInterfacedObject,
    iModelPagamentoMetodosExecutar)
  private
    FParent: iModelPagamentoMetodos;
  public
    constructor Create(Parent: iModelPagamentoMetodos);
    destructor Destroy; override;
    class function New(Parent: iModelPagamentoMetodos)
      : iModelPagamentoMetodosExecutar;
    function SetValor(Value: Currency): iModelPagamentoMetodosExecutar;
    function &End: iModelPagamentoMetodos;
  end;

implementation

{ TModelPagamentoTipoCartaoCreditoExecultar }

function TModelPagamentoTipoCartaoCreditoExecultar.&End: iModelPagamentoMetodos;
begin
  Result := FParent;
end;

constructor TModelPagamentoTipoCartaoCreditoExecultar.Create
  (Parent: iModelPagamentoMetodos);
begin
  FParent := Parent;
end;

destructor TModelPagamentoTipoCartaoCreditoExecultar.Destroy;
begin

  inherited;
end;

class function TModelPagamentoTipoCartaoCreditoExecultar.New
  (Parent: iModelPagamentoMetodos): iModelPagamentoMetodosExecutar;
begin
  Result := Self.Create(Parent);
end;

function TModelPagamentoTipoCartaoCreditoExecultar.SetValor(Value: Currency)
  : iModelPagamentoMetodosExecutar;
begin

end;

end.
