unit PDVUpdates.Model.Caixa;

interface

uses
  PDVUpdates.Model.Caixa.Interfaces, PDVUpdates.Model.Usuario.Interfaces;

type

  TModelCaixa = class(TInterfacedObject, iModelCaixa, iModelCaixaMetodos,
    iModelCaixaMetodosAbrir, iModelCaixaMetodosFechar,
    iModelCaixaMetodosSuprimento, iModelCaixaMetodosSangria,
    iModelCaixaMetodosTrocarOperador, iModelCaixaMetodosBloquearCaixa)
  private
    FMetodos: iModelCaixaMetodos;
    FValor: Currency;
    FUsuario: iModelUsuario;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iModelCaixa;
    function Metodos(Value: iModelCaixaMetodos): iModelCaixaMetodos;

    // ModelCaixaMetodos
    function Abrir: iModelCaixaMetodosAbrir;
    function Fechar: iModelCaixaMetodosFechar;
    function Suprimento: iModelCaixaMetodosSuprimento;
    function Sangria: iModelCaixaMetodosSangria;
    function TrocarOperador: iModelCaixaMetodosTrocarOperador;
    function BloquearCaixa: iModelCaixaMetodosBloquearCaixa;
    function &EndMetodos: iModelCaixa;

    // ModelCaixaMetodosAbrir
    function SetValorAbertuta(Value: Currency): iModelCaixaMetodosAbrir;
    function SetOperador(Value: iModelUsuario): iModelCaixaMetodosAbrir;
    function &EndAbrir: iModelCaixaMetodos;

    // ModelCaixaMetodosFechar
    function SetValorFechamento(Value: Currency): iModelCaixaMetodosFechar;
    function SetFiscal(Value: iModelUsuario): iModelCaixaMetodosFechar;
    function &EndFechar: iModelCaixaMetodos;

    // ModelCaixaMetodosSuprimento
    Function SetValorSuprimento(Value: Currency): iModelCaixaMetodosSuprimento;
    function SetAutorizadorSuprimento(Value: iModelUsuario)
      : iModelCaixaMetodosSuprimento;
    function &EndSuprimento: iModelCaixaMetodos;

    // ModelCaixaMetodosSangria
    Function SetValorSangria(Value: Currency): iModelCaixaMetodosSangria;
    function SetAutorizadorSangria(Value: iModelUsuario)
      : iModelCaixaMetodosSangria;
    function &EndSangria: iModelCaixaMetodos;

    // ModelCaixaMetodosTrocarOperador
    function SetTrocaOperador(Value: iModelUsuario)
      : iModelCaixaMetodosTrocarOperador;
    function SetAutorizadorTroca(Value: iModelUsuario)
      : iModelCaixaMetodosTrocarOperador;
    function &EndTrocarOperador: iModelCaixaMetodos;

    // ModelCaixaMetodosBloquearCaixa
    function SetAutorizadorBloqueio(Value: iModelUsuario)
      : iModelCaixaMetodosBloquearCaixa;
    function &EndBloquear: iModelCaixaMetodos;

  end;

implementation

{ TModelCaixa }

function TModelCaixa.Abrir: iModelCaixaMetodosAbrir;
begin
  Result := Self;
end;

function TModelCaixa.BloquearCaixa: iModelCaixaMetodosBloquearCaixa;
begin
  Result := Self;
end;

constructor TModelCaixa.Create;
begin

end;

destructor TModelCaixa.Destroy;
begin

  inherited;
end;

function TModelCaixa.EndAbrir: iModelCaixaMetodos;
begin
  Result := Self;
end;

function TModelCaixa.EndBloquear: iModelCaixaMetodos;
begin
  Result := Self;

end;

function TModelCaixa.EndFechar: iModelCaixaMetodos;
begin
  Result := Self;
end;

function TModelCaixa.EndMetodos: iModelCaixa;
begin
  Result := Self;
end;

function TModelCaixa.EndSangria: iModelCaixaMetodos;
begin
  Result := Self;
end;

function TModelCaixa.EndSuprimento: iModelCaixaMetodos;
begin
  Result := Self;
end;

function TModelCaixa.EndTrocarOperador: iModelCaixaMetodos;
begin
  Result := Self;
end;

function TModelCaixa.Fechar: iModelCaixaMetodosFechar;
begin
  Result := Self;
end;

function TModelCaixa.Metodos(Value: iModelCaixaMetodos): iModelCaixaMetodos;
begin
  FMetodos := Value;
  Result := FMetodos;
end;

class function TModelCaixa.New: iModelCaixa;
begin
  Result := Self.Create;
end;

function TModelCaixa.Sangria: iModelCaixaMetodosSangria;
begin
  Result := Self;
end;

function TModelCaixa.SetAutorizadorBloqueio(Value: iModelUsuario)
  : iModelCaixaMetodosBloquearCaixa;
begin
  Result := Self;
  FUsuario := Value;
end;

function TModelCaixa.SetAutorizadorSangria(Value: iModelUsuario)
  : iModelCaixaMetodosSangria;
begin
  Result := Self;
  FUsuario := Value;
end;

function TModelCaixa.SetAutorizadorSuprimento(Value: iModelUsuario)
  : iModelCaixaMetodosSuprimento;
begin

end;

function TModelCaixa.SetAutorizadorTroca(Value: iModelUsuario)
  : iModelCaixaMetodosTrocarOperador;
begin
  Result := Self;
  FUsuario := Value;
end;

function TModelCaixa.SetFiscal(Value: iModelUsuario): iModelCaixaMetodosFechar;
begin
  Result := Self;
  FUsuario := Value;
end;

function TModelCaixa.SetOperador(Value: iModelUsuario): iModelCaixaMetodosAbrir;
begin
  Result := Self;
  FUsuario := Value;
end;

function TModelCaixa.SetTrocaOperador(Value: iModelUsuario)
  : iModelCaixaMetodosTrocarOperador;
begin
  Result := Self;
  FUsuario := Value;
end;

function TModelCaixa.SetValorAbertuta(Value: Currency): iModelCaixaMetodosAbrir;
begin

end;

function TModelCaixa.SetValorFechamento(Value: Currency)
  : iModelCaixaMetodosFechar;
begin

end;

function TModelCaixa.SetValorSangria(Value: Currency)
  : iModelCaixaMetodosSangria;
begin

end;

function TModelCaixa.SetValorSuprimento(Value: Currency)
  : iModelCaixaMetodosSuprimento;
begin

end;

function TModelCaixa.Suprimento: iModelCaixaMetodosSuprimento;
begin
  Result := Self;
end;

function TModelCaixa.TrocarOperador: iModelCaixaMetodosTrocarOperador;
begin
  Result := Self;
end;

end.
